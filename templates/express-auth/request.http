### üîç DECODE JWT (accessToken o refreshToken)
POST http://localhost:3000/api/auth/decode-token
Content-Type: application/json

{
  "token": "{{accessToken}}"
}

### üîê LOGIN (USER)
# @name postLoginUser
@accessToken={{postLoginUser.response.body.accessToken}}
@refreshToken={{postLoginUser.response.body.refreshToken}}

POST http://localhost:3000/api/auth/login
Content-Type: application/json

{
  "email": "user@gmail.com",
  "password": "user@gmail.com"
}

### üîê LOGIN (ADMIN)
# @name postLogin
@accessToken={{postLogin.response.body.accessToken}}
@refreshToken={{postLogin.response.body.refreshToken}}

POST http://localhost:3000/api/auth/login
Content-Type: application/json

{
  "email": "admin@gmail.com",
  "password": "admin@gmail.com"
}

### üîÅ REFRESH ACCESS TOKEN
# @name refreshAccess
@newAccessToken={{refreshAccess.response.body.accessToken}}

POST http://localhost:3000/api/auth/refresh-token
Content-Type: application/json

{
  "refreshToken": "{{refreshToken}}"
}


### üîê LOGOUT
POST http://localhost:3000/api/auth/logout
Content-Type: application/json

### üìù REGISTER NEW USER
POST http://localhost:3000/api/auth/register
Content-Type: application/json

{
  "name": "John Doe",
  "email": "johndoe@example.com",
  "password": "mypass123"
}

### üë§ CHECK EXISTENCE
GET http://localhost:3000/api/auth/check-existence
?email=user@gmail.com
&username=admin

### üìÑ GET ALL USERS (PROTECTED)
GET http://localhost:3000/api/users/findAll
Authorization: Bearer {{accessToken}}
Content-Type: application/json

### üë§ GET CURRENT USER (PROTECTED)
GET http://localhost:3000/api/auth/me
Authorization: Bearer {{accessToken}}
Content-Type: application/json

### ‚ùå DELETE USER BY ID (PROTECTED, ADMIN ONLY)
DELETE http://localhost:3000/api/users/remove/2
Authorization: Bearer {{accessToken}}
Content-Type: application/json

